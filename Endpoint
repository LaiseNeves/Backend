________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
O que √© um Endpoint de API?
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

- Para desenvolver aplicativos e servi√ßos √∫teis e sustent√°veis, as APIs t√™m sido meios e facilitadores poderosos.

- As APIs facilitam a transmiss√£o de dados entre v√°rios artefatos de software para resolver os problemas dos clientes. 

-  Quase todos os produtos modernos baseados na web oferecem suas pr√≥prias APIs para interagir e integrar seus servi√ßos diretamente em qualquer projeto.


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Entendendo os endpoints de API
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

- ‚ÄúAPI‚Äù √© a abrevia√ß√£o de ‚ÄúApplication Programming Interface.‚Äù 

- √â essencialmente um conjunto de regras que permitem que um aplicativo compartilhe seus dados com outros aplicativos. 

---> Um endpoint de API √© uma localiza√ß√£o digital exposta pela API a partir da API que recebe e responde as consultas. 

---> Cada endpoint √© uma URL (Uniform Resource Locator) que fornece a localiza√ß√£o de um recurso no servidor da API.


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Como funcionam as APIs
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

Para que dois aplicativos de software se comuniquem pela internet:

- um aplicativo (indicado como cliente) envia uma solicita√ß√£o para os endpoints de API do outro aplicativo (indicado como servidor)


                                                                      app cliente ----solicitacao---> endpoints API servidor (outro aplicativo)


- Dependendo das habilidades de API, o cliente pode solicitar um recurso de um banco de dados ou pedir ao servidor para executar alguma a√ß√£o em seu ambiente e retornar os resultados.

- Ao receber o resultado do cliente, a API (ou o servidor) executa a opera√ß√£o solicitada e envia o resultado da opera√ß√£o de volta para o cliente na forma de uma resposta.

                                                                      API ou servidor <---resultado--- cliente <---------------.
                                                                            .                                                  .
                                                                            .                                                  .
                                                                         executa a                                             .
                                                                            .                                                  .
                                                                            .                                                  .
                                                                            v                                                  .
                                                                      operacao solicitada                                      .
                                                                            .                                                  .
                                                                            .                                                  .
                                                                          envia o                                              .
                                                                            .                                                  .
                                                                            .                                                  .
                                                                            v                                                  .
                                                                      resultado da opera√ß√£o = resposta ------- para o ---------.


- Esta resposta tamb√©m pode incluir quaisquer recursos que o cliente tenha solicitado.

- Pode haver v√°rios tipos de APIs, incluindo REST, SOAP, e GraphQL. Todas elas funcionam de uma forma diferente, mas seu prop√≥sito ainda √© o mesmo: facilitar a comunica√ß√£o entre entidades baseadas na web. 


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
üìå Qual √© a diferen√ßa entre uma API e um Endpoint?
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

---> Uma API √© um conjunto de protocolos e ferramentas para facilitar a intera√ß√£o entre dois aplicativos. Um endpoint √© um lugar na API onde a troca acontece. 

---> Endpoints s√£o URIs (Uniform Resource Identifiers) em uma API que um aplicativo pode acessar.

---> Todas as APIs t√™m endpoints. Sem um endpoint, seria imposs√≠vel interagir com uma API.


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
üìå Qual √© a diferen√ßa entre uma API e um Endpoint?
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

- Para expandir o seu entendimento de APIs e endpoints, vamos utilizar um pequeno exemplo. (...) Considere o Cat Facts API. (...)  Existem tr√™s endpoints dispon√≠veis: 

/fact: Retorna um cat fact √∫nico e aleat√≥rio.
/facts: Devolve uma lista de cat facts aleat√≥rios.
/breeds: Devolve uma lista de cat breeds.

Para fazer um pedido a esta API e retornar um cat fact, voc√™ precisa anexar o endpoint correto (que √© /fact):

                 √† URL base da API (que √© https://catfact.ninja/). 
Isso lhe dar√° a seguinte URL de endpoint: https://catfact.ninja/fact

Se voc√™ enviar uma solicita√ß√£o GET para a URL acima, voc√™ receber√° um resultado similar:

{
    "fact": "Spanish-Jewish folklore recounts that Adamu2019s first wife, Lilith, became a black vampire cat, sucking the blood from sleeping babies. This may be the root of the superstition that a cat will smother a sleeping baby or suck out the childu2019s breath.",
    "length": 245
}

Voc√™ n√£o teria conseguido obter esses dados caso tivesse acessado outro endpoint, como /breeds. √â dessa forma que os endpoints ajudam a interagir e organizar os recursos fornecidos por uma API 

---> cada endpoint √© espec√≠fico para uma por√ß√£o particular dos dados.


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
üìå Por que os Endpoints de API s√£o importantes?
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

- A transfer√™ncia de dados e o compartilhamento de recursos s√£o alguns dos fundamentos essenciais da internet (...)

- Sem APIs, nada disso seria poss√≠vel. As APIs fornecem um poderoso meio de comunica√ß√£o e intera√ß√£o entre aplicativos baseados na web.

---> Os endpoints de API, por sua vez, ajudam a determinar a localiza√ß√£o exata dos recursos na API. 
---> ajudam os desenvolvedores de API a organizar os recursos dispon√≠veis e controlar o acesso do consumidor tamb√©m.
---> desempenho e a produtividade dos aplicativos que consomem APIs dependem diretamente do design e desempenho dos endpoints de API.

(...)


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Localizando um Endpoint de API
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

- Localizar um endpoint de API √© um trabalho simples se voc√™ tiver acesso √† documenta√ß√£o da API. 

  √Äs vezes, a documenta√ß√£o pode listar os endpoints simplesmente com descri√ß√µes curtas ao lado de cada um.

- Em outros casos (como o Swagger), a documenta√ß√£o pode ser mais complexa e poderosa, e voc√™ pode ser capaz de testar os endpoints diretamente da p√°gina de documenta√ß√£o.

* dedicar tempo para entender o prop√≥sito de cada endpoint antes de come√ßar a us√°-lo.


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Vers√£o do Endpoint de API
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

- Assim como outros artefatos de software, as APIs tamb√©m t√™m vers√µes. O versionamento ajuda a observar e analisar a API conforme ela cresce durante o processo de desenvolvimento. 

- Aqui est√£o algumas maneiras comuns pelas quais os endpoints da API s√£o versionados.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Caminho do URI
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- Uma das maneiras mais populares de se obter uma vers√£o dos endpoints de API √© incluir um n√∫mero de vers√£o no caminho do URI. Por exemplo:

            http://example.com/api/1/resourcename

- Voc√™ pode ver esta abordagem como uma forma de versionar globalmente os endpoints de API. Caso voc√™ use um subdom√≠nio para √† sua API, como, por exemplo:

            http://api.example.com/resourcename

- voc√™ tamb√©m pode colocar um indicador de vers√£o em seu subdom√≠nio, como este:

            http://api-v2.example.com/resourcename

- Como voc√™ pode ver, esta abordagem modifica a caminho URI da API, de modo que cada vers√£o se comporta como um recurso independente. 

- Isso significa que voc√™ pode acessar simultaneamente as duas vers√µes da API conforme necess√°rio e at√© mesmo armazen√°-las em cache independentemente para acesso mais r√°pido.

- Ao incluir um n√∫mero de vers√£o no caminho da URI (e n√£o no subdom√≠nio), aqui est√° um formato interessante que voc√™ pode seguir para incluir mais informa√ß√µes:

            MAJOR.MINOR.PATCH

- Por exemplo, √© assim que a API interna do nosso exemplo acima seria versionada:

            http://example.com/api/1.2.3/resourcename

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Par√¢metros de consulta
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- Outra alternativa para fazer a vers√£o de uma REST API √© colocar o n√∫mero da vers√£o nos par√¢metros de consulta da URL.

-  Essa abordagem permite que o ambiente do servidor acesse o n√∫mero da vers√£o necess√°rio como qualquer outro par√¢metro de consulta e o use para redirecionar o fluxo de controle no aplicativo.

- A URL do exemplo anterior, quando versionada usando par√¢metros de consulta, ficaria assim:

          http://example.com/api/resourcename?version=1

- Benef√≠cios: Muito f√°cil de implementar em c√≥digo.
              Voc√™ pode rapidamente definir a vers√£o mais recente.

- Limita√ß√µes: O uso de par√¢metros pode ser mais desafiador para rotear solicita√ß√µes para a vers√£o correta do que a vers√£o do caminho do URI.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Cabe√ßalhos personalizados
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Voc√™ tamb√©m pode fazer a vers√£o REST APIs, fornecendo cabe√ßalhos personalizados com o n√∫mero da vers√£o como um atributo. 

A diferen√ßa mais significativa entre este m√©todo e os dois mencionados anteriormente √© que este n√£o desorganiza a URL do endpoint com informa√ß√µes da vers√£o

            curl -H "Accepts-version: 2.0"

            http://example.com/api/resourcename


(...)


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Exemplo de um endpoint do API
_____________________________________________________________________________________________________________________________________________________________________________________________________________________

Para entender melhor APIs e endpoints, ilustremos um exemplo usando a API do Twitter (...) Ela oferece v√°rios endpoints para realizar v√°rias opera√ß√µes em seus dados.

Por exemplo, voc√™ pode usar o tweet lookup endpoint (https://api.twitter.com/2/tweets/{id}) ara recuperar o conte√∫do de um tweet espec√≠fico usando seu identificador exclusivo. 

________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Exemplo de um endpoint do API
_____________________________________________________________________________________________________________________________________________________________________________________________________________________

Sem medidas de seguran√ßa adequadas, os endpoints da API podem violar seriamente as defesas do seu aplicativo e levar ao comprometimento de dados e recursos.


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Hashing de senha unidirecional
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ao construir recursos web, voc√™ muitas vezes encontrar√° senhas como uma forma de autenticar entidades. 
Enquanto as senhas ajudam a proteger os dados dos aplicativos de seus usu√°rios, voc√™ precisa proteger o armazenamento das senhas tamb√©m para torn√°-las um meio de autentica√ß√£o verdadeiramente eficaz.

(...)

Uma maneira de parar isso √© codific√°-las antes de armazen√°-las. Existem dois m√©todos de criptografia: sim√©trica e assim√©trica.

Na criptografia sim√©trica, voc√™ pode usar a mesma chave de criptografia para bloquear e desbloquear o conte√∫do. 
No entanto, isso n√£o √© aconselh√°vel para senhas, uma vez que hackers persistentes e sofisticados podem facilmente quebr√°-las.

* A maneira recomendada de armazenar senhas √© usando criptografia unidirecional ou ‚Äúassim√©trica‚Äù. 
  Ao inv√©s de empregar uma √∫nica chave de criptografia, uma fun√ß√£o matem√°tica √© usada para codificar os dados.

A vers√£o codificada √© armazenada no banco de dados para que ningu√©m, incluindo seus administradores do servidor, possa decifrar as senhas e visualiz√°-las. 
Para autenticar usu√°rios, a senha digitada √© executada atrav√©s da mesma fun√ß√£o matem√°tica, e os resultados s√£o comparados para verificar se a senha digitada estava correta.


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
HTTPS
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

(...)

voc√™ deve fazer quest√£o de sempre escolher HTTPS sempre que dispon√≠vel.

Se seus aplicativos est√£o atualmente usando o protocolo HTTP, voc√™ deve considerar fortemente a migra√ß√£o para HTTPS. N√£o importa qu√£o insignificante seja a conex√£o; ela sempre pode levar a um vazamento.

____________________________________________________________________________________________________________________________________________________________________________________________________________________
Referencias Bibliogr√°ficas: 
____________________________________________________________________________________________________________________________________________________________________________________________________________________

https://kinsta.com/pt/base-de-conhecimento/endpoint-api/#:~:text=Uma%20API%20%C3%A9%20um%20conjunto,API%20onde%20a%20troca%20acontece
