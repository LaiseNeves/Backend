__________________________________________________________________________________________________________________________________________________________________________________________________
O que é Swagger?
__________________________________________________________________________________________________________________________________________________________________________________________________

O Swagger é um conjunto de ferramentas de código aberto desenvolvido com base na especificação OpenAPI que pode ajudar você a projetar, construir, documentar e consumir APIs REST. 
As principais ferramentas do Swagger incluem:

- Swagger Editor – editor baseado em navegador onde você pode escrever definições OpenAPI.
- Swagger UI – renderiza definições OpenAPI como documentação interativa.
- Swagger Codegen – gera stubs de servidor e bibliotecas de cliente a partir de uma definição OpenAPI.
- Swagger Editor Next (beta) – editor baseado em navegador onde você pode escrever e revisar definições OpenAPI e AsyncAPI.
- Swagger Core – bibliotecas relacionadas a Java para criar, consumir e trabalhar com definições OpenAPI.
- Swagger Parser – biblioteca autônoma para analisar definições OpenAPI.
- Swagger APIDom – fornece uma estrutura única e unificadora para descrever APIs em várias linguagens de descrição e formatos de serialização.



A Especificação OpenAPI (anteriormente Especificação Swagger) é um formato de descrição de API para APIs REST. Um arquivo OpenAPI permite descrever toda a sua API, incluindo:

- Pontos de extremidade disponíveis ( /users) e operações em cada ponto de extremidade ( GET /users, POST /users)
- Parâmetros de operação Entrada e saída para cada operação
- Métodos de autenticação
- Informações de contato, licença, termos de uso e outras informações.
- As especificações da API podem ser escritas em YAML ou JSON. O formato é fácil de aprender e legível tanto para humanos quanto para máquinas. A especificação completa da OpenAPI pode ser 
  encontrada no GitHub: Especificação da OpenAPI 3.0.

__________________________________________________________________________________________________________________________________________________________________________________________________
Estrutura básica
__________________________________________________________________________________________________________________________________________________________________________________________________

Você pode escrever definições OpenAPI em YAML ou JSON .

Um exemplo de definição OpenAPI 3.0 escrita em YAML se parece com:

openapi: 3.0.4
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string


Todos os nomes de palavras-chave diferenciam maiúsculas de minúsculas .

__________________________________________________________________________________________________________________________________________________________________________________________________
Metadados
__________________________________________________________________________________________________________________________________________________________________________________________________
Cada definição de API deve incluir a versão da Especificação OpenAPI na qual esta definição se baseia:

openapi: 3.0.4

A versão OpenAPI define a estrutura geral de uma definição de API – o que você pode documentar e como documentar. O OpenAPI 3.0 utiliza versionamento semântico com um número de versão de três 
partes. As versões disponíveis são 3.0.0, 3.0.1, 3.0.2, 3.0.3e 3.0.4; elas são funcionalmente as mesmas.

A infoseção contém informações da API: title, description(opcional), version:

info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

- title é o nome da sua API. descriptionsão informações estendidas sobre sua API. Pode ser multilinha e suporta o dialeto CommonMark do Markdown para representação em rich text. HTML é suportado na 
  medida em que é fornecido pelo CommonMark [...]

- version é uma string arbitrária que especifica a versão da sua API (não confunda com a revisão do arquivo ou a openapiversão). Você pode usar versionamento semântico como major.minor.patch ou uma 
  string arbitrária como 1.0-beta ou 2017-07-25 . infotambém suporta outras palavras-chave para informações de contato, licença, termos de serviço e outros detalhes.

















